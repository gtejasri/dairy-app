{"ast":null,"code":"var _jsxFileName = \"D:\\\\UI_Tech\\\\cg-online-dairy-project\\\\dairy-app\\\\src\\\\components\\\\controller\\\\CustomerData.js\",\n    _s = $RefreshSig$();\n\nimport { getCustomerByIdService, getAllCustomerService, AddCustomerService, updateCustomerService, deleteCustomerByIdService } from \"../services/CustomerServiceData\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { viewCustomerById, viewCustomers, insertCustomer, updateCustomer, deleteCustomerById } from \"../../redux/CustomerSlice\";\nimport axios from \"axios\";\nimport Customer from \"../models/Customer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomerData = () => {\n  _s();\n\n  const [newCustomerObj, setNewCustomerObj] = useState(new Customer());\n  const [updtCustomerObj, setUpdtCustomerObj] = useState(new Customer());\n  const [displayCustomerObj, setDisplayCustomerObj] = useState(new Customer());\n  const [updateCustomerObj, setUpdateCustomerObj] = useState(new Customer());\n  const [customerId, setCustomerId] = useState('');\n  const [deleteCustomer, setDeleteCustomer] = useState('');\n  const dispatch = useDispatch();\n  const customerDataFromStore = useSelector(state => state.customer.customerState);\n  const customerList = useSelector(state => state.customer.customerList);\n  const customerDelete = useSelector(state => state.customer.customerDelete);\n\n  const handleCustomer = e => {\n    console.log('handleCustomer');\n    setCustomerId(e.target.value);\n  };\n\n  const handleAddCustomer = e => {\n    console.log(e.target.value);\n    setNewCustomerObj({ ...newCustomerObj,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleUpdateCustomer = e => {\n    console.log(e.target.value);\n    setUpdtCustomerObj({ ...updtCustomerObj,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleDeleteCustomer = ev => {\n    console.log('handleDeleteCustomer');\n    setDeleteCustomer(ev.target.value);\n  };\n\n  const submitGetCustomerById = evt => {\n    evt.preventDefault();\n    console.log('submitGetCustomerById');\n    getCustomerByIdService(customerId).then(response => {\n      dispatch(viewCustomerById(response.data));\n    }).catch(() => {\n      alert(`Customer with ${customerId} not found.`);\n    });\n    console.log(Object.keys(customerList));\n    setCustomerId('');\n  };\n\n  const submitGetAllCustomers = evt => {\n    evt.preventDefault();\n    console.log('submitGetAllCustomers');\n    getAllCustomerService().then(response => {\n      dispatch(viewCustomers(response.data));\n    }).catch(() => {\n      alert(`Something is wrong!`);\n    });\n  };\n\n  const submitAddCustomer = evt => {\n    evt.preventDefault();\n    console.log('addCustomers');\n    axios.post(`http://localhost:8086/customer/add`, newCustomerObj).then(response => {\n      setDisplayCustomerObj(response.data);\n      alert('Customer added successfully.');\n      setNewCustomerObj({\n        firstName: '',\n        lastName: '',\n        password: '',\n        mobileNumber: '',\n        email: ''\n      });\n    }).catch(() => {\n      alert(\"Customer could not be added.\");\n    });\n  };\n\n  const submitUpdateCustomer = evt => {\n    evt.preventDefault();\n    console.log('UpdateCustomers');\n    axios.put(`http://localhost:8086/customer/update`, updtCustomerObj).then(response => {\n      setUpdateCustomerObj(response.data);\n      alert('Customer details updated successfully.');\n      setNewCustomerObj({\n        firstName: '',\n        lastName: '',\n        password: '',\n        mobileNumber: '',\n        email: ''\n      });\n    }).catch(() => {\n      alert(\"Customer could not be found.\");\n    });\n  };\n\n  const submitDeleteCustomer = evt => {\n    evt.preventDefault();\n    console.log('deleteCustomerDetails');\n    axios.delete(`http://localhost:8086/customer/delete/${deleteCustomer}`).then(response => {\n      alert(`Customer details deleted successfully.`);\n      dispatch(deleteCustomerById(response.data)); // Sending data to redux store\n    }).catch(() => {\n      alert(`Customer not found.`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-4 text-primary mt-3 mb-3\",\n      children: \"Customer Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Fetch data from backend, store it in redux store and get it to component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-6 border border-light shadow p-3 mb-5 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find customer by id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-group form-primary\",\n        onSubmit: submitGetCustomerById,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mt-3\",\n          type: \"number\",\n          id: \"customerId\",\n          name: \"customerId\",\n          value: customerId,\n          onChange: handleCustomer,\n          placeholder: \"Enter customerId to search\",\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mt-3 btn btn-primary\",\n          type: \"submit\",\n          value: \"Find Customer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data from store: \", customerDataFromStore.customerId, \" \", customerDataFromStore.firstName, \" \", customerDataFromStore.lastName, customerDataFromStore.password, customerDataFromStore.mobileNumber, customerDataFromStore.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-7 border border-light shadow p-3 mb-5 bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Find all customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form form-group form-primary\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mt-3 btn btn-primary btn-block\",\n              type: \"button\",\n              onClick: submitGetAllCustomers,\n              value: \"Find All Customers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-light table-striped \",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"customerId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"FirstName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LastName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"mobileNumber\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: customerList.map((customer, k) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                k: k,\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.customerId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 48\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 38\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.mobileNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 39\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: customer.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 border border-light shadow p-3 mb-5 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addNewCustomerDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: newCustomerObj.firstName,\n          onChange: handleAddCustomer,\n          placeholder: \"Enter First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: newCustomerObj.lastName,\n          onChange: handleAddCustomer,\n          placeholder: \"Enter Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mobileNumber\",\n          name: \"mobileNumber\",\n          value: newCustomerObj.mobileNumber,\n          onChange: handleAddCustomer,\n          placeholder: \"Enter Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: newCustomerObj.email,\n          onChange: handleAddCustomer,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          name: \"password\",\n          value: newCustomerObj.password,\n          onChange: handleAddCustomer,\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\" // type=\"button\"\n          ,\n          value: \"Add Customer\",\n          onClick: submitAddCustomer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"New Customer Data: \", displayCustomerObj.customerId, \" \", displayCustomerObj.firstName, \" \", displayCustomerObj.lastName, displayCustomerObj.password, displayCustomerObj.mobileNumber, displayCustomerObj.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 border border-light shadow p-3 mb-5 bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Some other functionality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 border border-light shadow p-3 mb-5 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Update New Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addNewCustomerDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"customerId\",\n          name: \"customerId\",\n          value: updtCustomerObj.customerId,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter farmer Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          name: \"firstName\",\n          value: updtCustomerObj.firstName,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          name: \"lastName\",\n          value: updtCustomerObj.lastName,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          name: \"password\",\n          value: updtCustomerObj.password,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"mobileNumber\",\n          name: \"mobileNumber\",\n          value: updtCustomerObj.mobileNumber,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter Mobile Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          name: \"email\",\n          value: updtCustomerObj.email,\n          onChange: handleUpdateCustomer,\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\" // type=\"button\"\n          ,\n          value: \"update Customer\",\n          onClick: submitUpdateCustomer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Updated Farmer Data: \", updateCustomerObj.customerId, \" \", updateCustomerObj.firstName, \" \", updateCustomerObj.lastName, \" \", updateCustomerObj.password, updateCustomerObj.mobileNumber, \" \", updateCustomerObj.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4 border border-light shadow p-3 mb-5 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Delete customer by id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-group form-primary\",\n        onSubmit: submitDeleteCustomer,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mt-3\",\n          type: \"number\",\n          id: \"deleteCustomer\",\n          name: \"deleteCustomer\",\n          value: deleteCustomer,\n          onChange: handleDeleteCustomer,\n          placeholder: \"Enter Feedback Id\",\n          autoFocus: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control mt-3 btn btn-primary\",\n          type: \"submit\",\n          value: \"Delete Feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomerData, \"1Dbyfgk/Nh5xLvsWVS1rOymU4vk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CustomerData;\nexport default CustomerData; // import { getEmpById, getAllEmps } from \"../redux/EmpSlice\";\n// // useDispatch - send data to store,  useSelector - fetch data from store \n// import { useDispatch, useSelector } from \"react-redux\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// // import DepData from \"./DepData\";\n// import Employee from './models/Employee';\n// // step 4 - use redux store and reducers in components \n// const EmpData = (props) => {\n//     // creating state is not required with redux  \n//     // const [variable, setVariable] = useState('');\n//     const [emp, setEmp] = useState(new Employee());\n//     const dispatch = useDispatch();\n//     // this data is coming from store \n//     // const empDataFromStore = useSelector((arg) => {return arg.nameOfTheState.data});\n//     // const empDataFromStore = useSelector((arg) =>  arg.nameOfTheState.data );\n//     const empDataFromStore = useSelector((state) => state.emp.empState);\n//     const empList = useSelector((state) => state.emp.empList);\n//     const handleEmp = (e) => {\n//         console.log('handleEmp');\n//         setEmp({\n//             ...emp,\n//             [e.target.name]: e.target.value\n//         });\n//     }\n//     const submitGetEmpById = (evt) => {\n//         evt.preventDefault();\n//         console.log('submitGetEmpById');\n//         axios.get(`emp/getempbyid/${emp.eid}`)\n//             .then((response) => {\n//                 dispatch(getEmpById(response.data));\n//                 setEmp({ eid: '' });\n//             })\n//             .catch(() => {\n//                 alert(\"Employee not found.\");\n//                 setEmp({ eid: '' });\n//                 dispatch(getEmpById(emp));\n//             });\n//     }\n//     const submitGetAllEmps = (evt) => {\n//         evt.preventDefault();\n//         console.log('submitGetAllEmps');\n//         axios.get(`emp/getallemps`)\n//         // axios.get(`http://localhost:8082/emp/getallemps`)\n//             .then((response) => {\n//                 dispatch(getAllEmps(response.data));\n//             })\n//             .catch(() => {\n//                 alert('Something is wrong!');\n//             });\n//     }\n//     return (\n//         <div>\n//             <h1 className=\"display-4 text-primary mt-3 mb-3\" >Employee Component</h1>\n//             <p>Fetch data from backend, store it in redux store and get it to component</p>\n//             <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n//                 <p>Find employee by id</p>\n//                 <form className=\"form form-group form-primary\" onSubmit={submitGetEmpById}>\n//                     <input className=\"form-control mt-3\" type=\"number\" id=\"eid\" name=\"eid\" value={emp.eid} onChange={handleEmp} placeholder=\"Enter eid to search\" autoFocus />\n//                     <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Find Employee\" />\n//                 </form>\n//                 <p>Data from store: {empDataFromStore.eid} {empDataFromStore.firstName} {empDataFromStore.salary}</p>\n//             </div>\n//             <div>\n//                 <div className=\"col-6 border border-light shadow p-3 mb-5 bg-white\">\n//                     <p>Find all employees</p>\n//                     <div>\n//                         <form className=\"form form-group form-primary\">\n//                             <input className=\"mt-3 btn btn-primary btn-block\" type=\"button\" onClick={submitGetAllEmps} value=\"Find All Employees\" />\n//                         </form>\n//                     </div>\n//                     <table className=\"table table-light table-striped\">\n//                         <thead>\n//                             <tr>\n//                                 <th>Eid</th>\n//                                 <th>Name</th>\n//                                 <th>Salary</th>\n//                             </tr>\n//                         </thead>\n//                         <tbody>\n//                             {empList.map((emp, k) => {\n//                                 return (\n//                                     <tr k={k}> <td>{emp.eid}</td>  <td>{emp.firstName}</td> <td>{emp.salary}</td></tr>\n//                                 )\n//                             })}\n//                         </tbody>\n//                     </table>\n//                 </div>\n//             </div>\n//             <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\n//                 <p>Some other functionality</p>\n//             </div>\n//         </div>\n//     );\n// }\n// export default EmpData;\n// const EmpData = (props) => {\n//     console.log('Child component');\n//     return (\n//         <div>\n//             <h1 className=\"display-4 text-primary mt-3\" >Employee Data Component</h1>\n//             <p>Employee data component</p>\n//         </div>\n//     );\n// }\n// export default EmpData;\n// // props - arguments to a component \n// // pass data - \n// // 1. from parent component to child component - props \n// // 2. from child compoment to parent component - ??\n// import { useEffect, useState } from \"react\";\n// // import { useState } from \"react\";\n// const EmpData = (props) => {\n//     console.log('Child component');\n//     // state - one object for a component to store all the data in that component\n//     // in function component, state can be created with useState(); hook (hook means method)    \n//     // syntax const [variableName, setVariableName] = useState(initial value);\n//     // const [eid, setEid] = useState(0);\n//     // const [ename, setEname] = useState('');\n//     // const [isAvailable, setIsAvailable] = useState(false);\n//     // const [emp, setEmp] = useState({});\n//     // const [cities, setCities] = useState([]);\n//     // const childData = 2211;\n//     const [childData, setChildData] = useState(1);\n//     // const [childData2, setChildData2] = useState(1); // multipple variables are also possible \n//     // optionally, state can be initialized with useEffect(); \n//     // useEffect(arg, arg2);\n//     useEffect(() => {\n//         console.log('Child useEffect');\n//         setChildData(41548);\n//     }\n//         , []);\n//     const childFun = () => {\n//         console.log('childFun');\n//         return childData;\n//     }\n//     return (\n//         <div>\n//             <p className=\"display-4 text-primary\">Emp Data Component</p>\n//             <p> Child data in child component :  {childData}</p>\n//             {/* <p>{props.someData.def}</p> */}\n//             <p>{props.numToPassToChild}</p>\n//             {/* try this  */}\n//             {/* <p>{props.anotherData}</p> */}\n//             <p>{props.someOtherData}</p>\n//             {/* Invoke function from parent  */}\n//             {/* <p>{props.callParentFun}</p> */}\n//             {/* <button className=\"btn btn-primary\" onClick={() => { props.callParentFun(childFun) }} > */}\n//             Pass data From child To parent</button>\n//         </div >\n//     );\n// }\n// export default EmpData;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerData\");","map":{"version":3,"sources":["D:/UI_Tech/cg-online-dairy-project/dairy-app/src/components/controller/CustomerData.js"],"names":["getCustomerByIdService","getAllCustomerService","AddCustomerService","updateCustomerService","deleteCustomerByIdService","useDispatch","useSelector","useState","viewCustomerById","viewCustomers","insertCustomer","updateCustomer","deleteCustomerById","axios","Customer","CustomerData","newCustomerObj","setNewCustomerObj","updtCustomerObj","setUpdtCustomerObj","displayCustomerObj","setDisplayCustomerObj","updateCustomerObj","setUpdateCustomerObj","customerId","setCustomerId","deleteCustomer","setDeleteCustomer","dispatch","customerDataFromStore","state","customer","customerState","customerList","customerDelete","handleCustomer","e","console","log","target","value","handleAddCustomer","name","handleUpdateCustomer","handleDeleteCustomer","ev","submitGetCustomerById","evt","preventDefault","then","response","data","catch","alert","Object","keys","submitGetAllCustomers","submitAddCustomer","post","firstName","lastName","password","mobileNumber","email","submitUpdateCustomer","put","submitDeleteCustomer","delete","map","k"],"mappings":"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AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YA3LA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwMH,CAtTD;;GAAM7B,Y;UAWeV,W,EACaC,W,EACTA,W,EACEA,W;;;KAdrBS,Y;AAuTN,eAAeA,YAAf,C,CAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { getCustomerByIdService,getAllCustomerService,AddCustomerService,updateCustomerService,deleteCustomerByIdService } from \"../services/CustomerServiceData\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { viewCustomerById,viewCustomers ,insertCustomer,updateCustomer,deleteCustomerById} from \"../../redux/CustomerSlice\";\r\nimport axios from \"axios\";\r\nimport Customer from \"../models/Customer\";\r\n\r\n\r\nconst CustomerData = () => {\r\n\r\n\r\n    const [newCustomerObj, setNewCustomerObj] = useState(new Customer());\r\n    const [updtCustomerObj, setUpdtCustomerObj] = useState(new Customer());\r\n    const [displayCustomerObj, setDisplayCustomerObj] = useState(new Customer());\r\n    const [updateCustomerObj, setUpdateCustomerObj] = useState(new Customer());\r\n\r\n    const [customerId, setCustomerId] = useState('');\r\n    const [deleteCustomer, setDeleteCustomer] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const customerDataFromStore = useSelector((state) => state.customer.customerState);\r\n    const customerList = useSelector((state) => state.customer.customerList);\r\n    const customerDelete = useSelector((state) => state.customer.customerDelete);\r\n   \r\n    const handleCustomer = (e) => {\r\n        console.log('handleCustomer');\r\n        setCustomerId(e.target.value);\r\n    }\r\n\r\n    const handleAddCustomer = (e) => {\r\n        console.log(e.target.value);\r\n        setNewCustomerObj({\r\n            ...newCustomerObj,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n    const handleUpdateCustomer = (e) => {\r\n        console.log(e.target.value);\r\n        setUpdtCustomerObj({\r\n            ...updtCustomerObj,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    const handleDeleteCustomer = (ev) => {\r\n        console.log('handleDeleteCustomer');\r\n        setDeleteCustomer(ev.target.value);\r\n    }\r\n\r\n    const submitGetCustomerById = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('submitGetCustomerById');\r\n        getCustomerByIdService(customerId)\r\n            .then((response) => { dispatch(viewCustomerById(response.data)) })\r\n            .catch(() => {\r\n                alert(`Customer with ${customerId} not found.`);\r\n            });\r\n        console.log(Object.keys(customerList));\r\n        setCustomerId('');\r\n    }\r\n\r\n    const submitGetAllCustomers = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('submitGetAllCustomers');\r\n        getAllCustomerService()\r\n            .then((response) => {\r\n                dispatch(viewCustomers(response.data));\r\n            })\r\n            .catch(() => {\r\n                alert(`Something is wrong!`);\r\n            });\r\n    }\r\n\r\n    const submitAddCustomer = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('addCustomers');\r\n        axios.post(`http://localhost:8086/customer/add`, newCustomerObj)\r\n            .then((response) => {\r\n                setDisplayCustomerObj(response.data);\r\n                alert('Customer added successfully.');\r\n                setNewCustomerObj({ firstName:'', lastName:'',password:'',mobileNumber:'',email:''})\r\n            \r\n            })\r\n            .catch(() => {\r\n                alert(\"Customer could not be added.\");\r\n            });\r\n    }\r\n\r\n    const submitUpdateCustomer = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('UpdateCustomers');\r\n        axios.put(`http://localhost:8086/customer/update`, updtCustomerObj)\r\n            .then((response) => {\r\n                setUpdateCustomerObj(response.data);\r\n                alert('Customer details updated successfully.');\r\n                setNewCustomerObj({ firstName:'', lastName:'',password:'',mobileNumber:'',email:''})\r\n            \r\n            })\r\n            .catch(() => {\r\n                alert(\"Customer could not be found.\");\r\n            });\r\n    }\r\n\r\n    const submitDeleteCustomer = (evt) => {\r\n        evt.preventDefault();\r\n        console.log('deleteCustomerDetails');\r\n        axios.delete(`http://localhost:8086/customer/delete/${deleteCustomer}`)\r\n            .then((response) => {\r\n                alert(`Customer details deleted successfully.`)\r\n                dispatch(deleteCustomerById(response.data));             // Sending data to redux store\r\n\r\n            })\r\n            .catch(() => {\r\n                alert(`Customer not found.`);\r\n            });\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"display-4 text-primary mt-3 mb-3\" >Customer Component</h1>\r\n            <p>Fetch data from backend, store it in redux store and get it to component</p>\r\n\r\n            <div className=\"col-6 border border-light shadow p-3 mb-5 bg-white\">\r\n                <p>Find customer by id</p>\r\n                <form className=\"form form-group form-primary\" onSubmit={submitGetCustomerById}>\r\n                    <input className=\"form-control mt-3\" type=\"number\" id=\"customerId\" name=\"customerId\" value={customerId} onChange={handleCustomer} placeholder=\"Enter customerId to search\" autoFocus required />\r\n                    <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Find Customer\" />\r\n                </form>\r\n                <p>Data from store: {customerDataFromStore.customerId} {customerDataFromStore.firstName} {customerDataFromStore.lastName}{customerDataFromStore.password}{customerDataFromStore.mobileNumber}{customerDataFromStore.email}</p>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"col-7 border border-light shadow p-3 mb-5 bg-white\">\r\n                    <p>Find all customers</p>\r\n                    <div>\r\n                        <form className=\"form form-group form-primary\">\r\n                            <input className=\"mt-3 btn btn-primary btn-block\" type=\"button\" onClick={submitGetAllCustomers} value=\"Find All Customers\" />\r\n                        </form>\r\n                    </div >\r\n                    <table className=\"table table-light table-striped \">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>customerId</th>\r\n                                <th>FirstName</th>\r\n                                <th>LastName</th>\r\n                                <th>Password</th>\r\n                                <th>mobileNumber</th>\r\n                                <th>email</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {customerList.map((customer, k) => {\r\n                                return (\r\n                                    <tr k={k}> <td>{customer.customerId}</td> \r\n                                     <td>{customer.firstName}</td>\r\n                                      <td>{customer.lastName}</td>\r\n                                      <td>{customer.password}</td>\r\n                                      <td>{customer.mobileNumber}</td>\r\n                                      <td>{customer.email}</td></tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n            \r\n            <p>Add New Customer</p>\r\n            {/* <form onSubmit={submitAddEmp}> */}\r\n            <div id=\"addNewCustomerDiv\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    value={newCustomerObj.firstName}\r\n                    onChange={handleAddCustomer}\r\n                    placeholder=\"Enter First Name\" />\r\n                    <br/>\r\n                    <br/>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    value={newCustomerObj.lastName}\r\n                    onChange={handleAddCustomer}\r\n                    placeholder=\"Enter Last Name\" />\r\n                    <br/>\r\n                    <br/>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"mobileNumber\"\r\n                    name=\"mobileNumber\"\r\n                    value={newCustomerObj.mobileNumber}\r\n                    onChange={handleAddCustomer}\r\n                    placeholder=\"Enter Mobile Number\" />\r\n                    <br/>\r\n                    <br/>\r\n\r\n                 <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={newCustomerObj.email}\r\n                    onChange={handleAddCustomer}\r\n                    placeholder=\"Enter Email\" />   \r\n                    <br/>\r\n                    <br/>\r\n\r\n                 <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={newCustomerObj.password}\r\n                    onChange={handleAddCustomer}\r\n                    placeholder=\"Enter password\" />   \r\n                    <br/>\r\n                    <br/>\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    // type=\"button\"\r\n                    value=\"Add Customer\"\r\n                    onClick={submitAddCustomer}\r\n                />\r\n            </div>\r\n            <p>New Customer Data: {displayCustomerObj.customerId} {displayCustomerObj.firstName} {displayCustomerObj.lastName}{displayCustomerObj.password}{displayCustomerObj.mobileNumber}{displayCustomerObj.email}</p>\r\n        </div>\r\n\r\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n                <p>Some other functionality</p>\r\n            </div>\r\n\r\n            <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n            \r\n            <p>Update New Customer</p>\r\n            {/* <form onSubmit={submitAddEmp}> */}\r\n            <div id=\"addNewCustomerDiv\">\r\n            <input\r\n                    type=\"text\"\r\n                    id=\"customerId\"\r\n                    name=\"customerId\"\r\n                    value={updtCustomerObj.customerId}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter farmer Id\" />\r\n                    <br/>\r\n                    <br/>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"firstName\"\r\n                    name=\"firstName\"\r\n                    value={updtCustomerObj.firstName}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter First Name\" />\r\n                    <br/>\r\n                    <br/>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"lastName\"\r\n                    name=\"lastName\"\r\n                    value={updtCustomerObj.lastName}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter Last Name\" />\r\n                    <br/>\r\n                    <br/>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={updtCustomerObj.password}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter password\" />  \r\n                    <br/>\r\n                    <br/> \r\n                <input\r\n                    type=\"text\"\r\n                    id=\"mobileNumber\"\r\n                    name=\"mobileNumber\"\r\n                    value={updtCustomerObj.mobileNumber}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter Mobile Number\" />\r\n                    <br/>\r\n                    <br/>\r\n\r\n                 <input\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={updtCustomerObj.email}\r\n                    onChange={handleUpdateCustomer}\r\n                    placeholder=\"Enter Email\" />   \r\n                    <br/>\r\n                    <br/>\r\n                \r\n                <input\r\n                    type=\"submit\"\r\n                    // type=\"button\"\r\n                    value=\"update Customer\"\r\n                    onClick={submitUpdateCustomer}\r\n                />\r\n            </div>\r\n            <p>Updated Farmer Data: {updateCustomerObj.customerId} {updateCustomerObj.firstName} {updateCustomerObj.lastName} {updateCustomerObj.password}{updateCustomerObj.mobileNumber} {updateCustomerObj.email}</p>\r\n        </div>\r\n        <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n                <p>Delete customer by id</p>\r\n                <form className=\"form form-group form-primary\" onSubmit={submitDeleteCustomer}>\r\n                    <input className=\"form-control mt-3\" type=\"number\" id=\"deleteCustomer\" name=\"deleteCustomer\" value={deleteCustomer} onChange={handleDeleteCustomer} placeholder=\"Enter Feedback Id\" autoFocus required />\r\n                    <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Delete Feedback\" />\r\n                </form>\r\n                {/* <p>Deleted Farmer details: {farmerDataFromStore.farmerId} {farmerDataFromStore.firstName} {farmerDataFromStore.lastName} </p> */}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default CustomerData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { getEmpById, getAllEmps } from \"../redux/EmpSlice\";\r\n\r\n// // useDispatch - send data to store,  useSelector - fetch data from store \r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n// // import DepData from \"./DepData\";\r\n// import Employee from './models/Employee';\r\n// // step 4 - use redux store and reducers in components \r\n\r\n// const EmpData = (props) => {\r\n\r\n//     // creating state is not required with redux  \r\n//     // const [variable, setVariable] = useState('');\r\n\r\n//     const [emp, setEmp] = useState(new Employee());\r\n//     const dispatch = useDispatch();\r\n\r\n//     // this data is coming from store \r\n//     // const empDataFromStore = useSelector((arg) => {return arg.nameOfTheState.data});\r\n//     // const empDataFromStore = useSelector((arg) =>  arg.nameOfTheState.data );\r\n\r\n//     const empDataFromStore = useSelector((state) => state.emp.empState);\r\n//     const empList = useSelector((state) => state.emp.empList);\r\n\r\n//     const handleEmp = (e) => {\r\n//         console.log('handleEmp');\r\n//         setEmp({\r\n//             ...emp,\r\n//             [e.target.name]: e.target.value\r\n//         });\r\n//     }\r\n\r\n//     const submitGetEmpById = (evt) => {\r\n//         evt.preventDefault();\r\n//         console.log('submitGetEmpById');\r\n//         axios.get(`emp/getempbyid/${emp.eid}`)\r\n//             .then((response) => {\r\n//                 dispatch(getEmpById(response.data));\r\n//                 setEmp({ eid: '' });\r\n//             })\r\n//             .catch(() => {\r\n//                 alert(\"Employee not found.\");\r\n//                 setEmp({ eid: '' });\r\n//                 dispatch(getEmpById(emp));\r\n//             });\r\n//     }\r\n\r\n//     const submitGetAllEmps = (evt) => {\r\n//         evt.preventDefault();\r\n//         console.log('submitGetAllEmps');\r\n//         axios.get(`emp/getallemps`)\r\n//         // axios.get(`http://localhost:8082/emp/getallemps`)\r\n//             .then((response) => {\r\n//                 dispatch(getAllEmps(response.data));\r\n//             })\r\n//             .catch(() => {\r\n//                 alert('Something is wrong!');\r\n//             });\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <h1 className=\"display-4 text-primary mt-3 mb-3\" >Employee Component</h1>\r\n//             <p>Fetch data from backend, store it in redux store and get it to component</p>\r\n\r\n//             <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n//                 <p>Find employee by id</p>\r\n//                 <form className=\"form form-group form-primary\" onSubmit={submitGetEmpById}>\r\n//                     <input className=\"form-control mt-3\" type=\"number\" id=\"eid\" name=\"eid\" value={emp.eid} onChange={handleEmp} placeholder=\"Enter eid to search\" autoFocus />\r\n//                     <input className=\"form-control mt-3 btn btn-primary\" type=\"submit\" value=\"Find Employee\" />\r\n//                 </form>\r\n//                 <p>Data from store: {empDataFromStore.eid} {empDataFromStore.firstName} {empDataFromStore.salary}</p>\r\n//             </div>\r\n\r\n//             <div>\r\n//                 <div className=\"col-6 border border-light shadow p-3 mb-5 bg-white\">\r\n//                     <p>Find all employees</p>\r\n//                     <div>\r\n//                         <form className=\"form form-group form-primary\">\r\n//                             <input className=\"mt-3 btn btn-primary btn-block\" type=\"button\" onClick={submitGetAllEmps} value=\"Find All Employees\" />\r\n//                         </form>\r\n//                     </div>\r\n//                     <table className=\"table table-light table-striped\">\r\n//                         <thead>\r\n//                             <tr>\r\n//                                 <th>Eid</th>\r\n//                                 <th>Name</th>\r\n//                                 <th>Salary</th>\r\n//                             </tr>\r\n//                         </thead>\r\n//                         <tbody>\r\n//                             {empList.map((emp, k) => {\r\n//                                 return (\r\n//                                     <tr k={k}> <td>{emp.eid}</td>  <td>{emp.firstName}</td> <td>{emp.salary}</td></tr>\r\n//                                 )\r\n//                             })}\r\n//                         </tbody>\r\n//                     </table>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <div className=\"col-4 border border-light shadow p-3 mb-5 bg-white\">\r\n//                 <p>Some other functionality</p>\r\n//             </div>\r\n\r\n//         </div>\r\n//     );\r\n// }\r\n// export default EmpData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const EmpData = (props) => {\r\n//     console.log('Child component');\r\n//     return (\r\n//         <div>\r\n//             <h1 className=\"display-4 text-primary mt-3\" >Employee Data Component</h1>\r\n//             <p>Employee data component</p>\r\n//         </div>\r\n//     );\r\n// }\r\n// export default EmpData;\r\n\r\n// // props - arguments to a component \r\n// // pass data - \r\n// // 1. from parent component to child component - props \r\n// // 2. from child compoment to parent component - ??\r\n\r\n// import { useEffect, useState } from \"react\";\r\n\r\n// // import { useState } from \"react\";\r\n\r\n// const EmpData = (props) => {\r\n//     console.log('Child component');\r\n\r\n//     // state - one object for a component to store all the data in that component\r\n//     // in function component, state can be created with useState(); hook (hook means method)    \r\n//     // syntax const [variableName, setVariableName] = useState(initial value);\r\n//     // const [eid, setEid] = useState(0);\r\n//     // const [ename, setEname] = useState('');\r\n//     // const [isAvailable, setIsAvailable] = useState(false);\r\n//     // const [emp, setEmp] = useState({});\r\n//     // const [cities, setCities] = useState([]);\r\n\r\n//     // const childData = 2211;\r\n//     const [childData, setChildData] = useState(1);\r\n//     // const [childData2, setChildData2] = useState(1); // multipple variables are also possible \r\n\r\n//     // optionally, state can be initialized with useEffect(); \r\n//     // useEffect(arg, arg2);\r\n\r\n//     useEffect(() => {\r\n//         console.log('Child useEffect');\r\n//         setChildData(41548);\r\n//     }\r\n//         , []);\r\n\r\n//     const childFun = () => {\r\n//         console.log('childFun');\r\n//         return childData;\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <p className=\"display-4 text-primary\">Emp Data Component</p>\r\n//             <p> Child data in child component :  {childData}</p>\r\n\r\n//             {/* <p>{props.someData.def}</p> */}\r\n//             <p>{props.numToPassToChild}</p>\r\n//             {/* try this  */}\r\n//             {/* <p>{props.anotherData}</p> */}\r\n//             <p>{props.someOtherData}</p>\r\n//             {/* Invoke function from parent  */}\r\n//             {/* <p>{props.callParentFun}</p> */}\r\n//             {/* <button className=\"btn btn-primary\" onClick={() => { props.callParentFun(childFun) }} > */}\r\n//             Pass data From child To parent</button>\r\n//         </div >\r\n//     );\r\n// }\r\n\r\n// export default EmpData;"]},"metadata":{},"sourceType":"module"}